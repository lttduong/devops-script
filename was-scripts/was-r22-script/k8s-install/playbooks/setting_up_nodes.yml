---
- hosts: kubernetes_master_nodes:kubernetes_worker_nodes
  become: yes
  vars_files:
  - env_variables
  tasks:
  - name: Creating a repository file for Kubernetes
    file:
     path: /etc/yum.repos.d/kubernetes.repo
     state: touch

  - name: Adding repository details in Kubernetes repo file.
    blockinfile:
     path: /etc/yum.repos.d/kubernetes.repo
     block: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      enabled=1
      gpgcheck=1
      repo_gpgcheck=0
      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
        https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
  

  - name: Installing add microsoft repo packages 
    shell: |
      yum update -y --disablerepo='*' --enablerepo='*microsoft*'
      yum clean all
      yum makecache
      yum repolist

  - name: Installing Docker and firewalld
    shell: |
      yum install -y yum-utils device-mapper-persistent-data lvm2
      yum install firewalld -y
      yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      yum update -y && yum install docker -y 

  - name: Installing required packages
    yum:
     name: "{{ packages }}"
     state: present

  - name: update environment for kubelet
    shell: Environment="KUBELET_SYSTEM_PODS_ARGS=--pod-manifest-path=/etc/kubernetes/manifests --allow-privileged=true --fail-swap-on=false" && systemctl daemon-reload

  - name: Starting and Enabling the required services
    service:
     name: "{{ item }}"
     state: started
     enabled: yes
    with_items: "{{ services }}"

  - name: Allow Network Ports in Firewalld
    firewalld:
     port: "{{ item }}"
     state: enabled
     permanent: yes
     immediate: yes
    with_items: "{{ master_ports if ('kubernetes_master_nodes' in group_names) else worker_ports }}"

  - name: Allow masquerading in Firewalld
    firewalld:
      masquerade: "yes"
      state: enabled
      permanent: yes
      immediate: yes

  - name: Enabling Bridge Firewall Rule
    shell: "echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables"

  - name: ensure net.bridge.bridge-nf-call-ip6tables is set to 1
    sysctl:
     name: net.bridge.bridge-nf-call-ip6tables
     value: 1
     state: present

  - name: ensure net.bridge.bridge-nf-call-iptables is set to 1
    sysctl:
     name: net.bridge.bridge-nf-call-iptables
     value: 1
     state: present

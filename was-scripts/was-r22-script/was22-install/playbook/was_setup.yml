- hosts: kubernetes_master_nodes
  become: yes
  vars_files:
  - env_variables

  tasks:
    - name: Untain master node
      shell: kubectl taint node {{edge_node}} node-role.kubernetes.io/master:NoSchedule-
      ignore_errors: yes
    
    - name: Create a directory if it does not exist
      file:
        path: $HOME/WAS
        state: directory
        mode: '0755' 

    - name: Copy was value file to master host
      copy:
        src: was-packages/was_values.tpl
        dest: $HOME/WAS

    - name: Copy was value file to master host
      copy:
        src: was-packages/was_config_vars.tpl
        dest: $HOME/WAS

    - name: Copy nbp config file to master host
      copy:
        src: bp-packages/bp_config_vars.tpl
        dest: $HOME/WAS

    - name: Copy ncmtpl binary execute file to master host
      copy:
        src: bp-packages/ncmtpl
        dest: $HOME/WAS
        mode: a+x

    - name: Copy was script file to master host
      copy:
        src: was-packages/helm-install.sh
        dest: $HOME/WAS
        mode: a+x

    - name: Copy was chart package to master host
      copy:
        src: was-packages/was.tgz
        dest: $HOME/WAS

    - name: Remove was pods if any with was app
      shell: kubectl get po -n netguard-base | grep  nwas | awk '{print $1}' | xargs -l kubectl delete po -n netguard-netguard-base
      ignore_errors: yes

    - name: Remove was secret if any was app 
      shell: kubectl get secret -n netguard-base | grep  nwas | awk '{print $1}' | xargs -l kubectl delete secret -n netguard-netguard-base
      ignore_errors: yes

    - name: Remove was configmap if any was app
      shell: kubectl get cm -n netguard-base | grep  nwas | awk '{print $1}' | xargs -l kubectl delete cm -n netguard-netguard-base
      ignore_errors: yes

    - name: Generate the was_values.tpl to was_values.yml
      shell: ./ncmtpl -d bp_config_vars.tpl -d was_config_vars.tpl was_values.tpl -o was_values.yml
      args:
        chdir: $HOME/WAS

    - name: Install was deploy with helm3 scripting
      shell: ./helm-install.sh --action=install --appli-name=was --config-values=was_values.yml
      args:
        chdir: $HOME/WAS



---
{{ if or (.Release.IsInstall) (and (.Release.IsUpgrade) (.Values.rabbitmq.password)) (and (.Release.IsUpgrade) (.Values.tmpForceRecreateResources)) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "rabbitmq.fullname" . }}
  labels:
    app: {{ template "rabbitmq.name" . }}
    chart: {{ template "rabbitmq.chart" .  }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    {{- include "crmq.commonLabels" . | indent 4 }}
  annotations:
    "helm.sh/hook": pre-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation
type: Opaque
data:
  {{ if .Values.rabbitmq.password }}
  rabbitmq-password: {{ .Values.rabbitmq.password | b64enc | quote }}
  {{ else }}
  rabbitmq-password: {{ randAlphaNum 20 | b64enc | quote }}
  {{ end }}
  rabbitmq-user: {{ .Values.rabbitmq.username | b64enc | quote }}
{{ end }}

---
{{ if or .Release.IsInstall (and (.Release.IsUpgrade) (.Values.tmpForceRecreateResources)) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "rabbitmq.fullname" . }}-const
  labels:
    app: {{ template "rabbitmq.name" . }}
    chart: {{ template "rabbitmq.chart" .  }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    {{- include "crmq.commonLabels" . | indent 4 }}
  annotations:
    "helm.sh/hook": pre-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation
type: Opaque
data:
  {{ if .Values.rabbitmq.erlangCookie }}
  rabbitmq-erlang-cookie: {{ .Values.rabbitmq.erlangCookie | b64enc | quote }}
  {{ else }}
  rabbitmq-erlang-cookie: {{ randAlphaNum 32 | b64enc | quote }}
  {{ end }}
  {{ if and .Values.rabbitmq.tls.cacert .Values.rabbitmq.tls.cert .Values.rabbitmq.tls.key }}
  server.cacert.pem: {{ .Values.rabbitmq.tls.cacert | b64enc | quote }}
  server.cert.pem: {{ .Values.rabbitmq.tls.cert | b64enc | quote }}
  server.key.pem: {{ .Values.rabbitmq.tls.key | b64enc | quote }}
  {{- else if and .Values.rabbitmq.tls.enabled .Values.rabbitmq.tls.path.cacert .Values.rabbitmq.tls.path.cert .Values.rabbitmq.tls.path.key }}
  server.cacert.pem: {{ .Files.Get .Values.rabbitmq.tls.path.cacert | b64enc | quote }}
  server.cert.pem: {{ .Files.Get .Values.rabbitmq.tls.path.cert | b64enc | quote }}
  server.key.pem: {{ .Files.Get .Values.rabbitmq.tls.path.key | b64enc | quote }}
  {{ end }}
  {{- if and .Values.rabbitmq.management.enabled .Values.rabbitmq.management.cacert .Values.rabbitmq.management.cert .Values.rabbitmq.management.key }}
  management.cacert.pem: {{ .Values.rabbitmq.management.cacert | b64enc | quote }}
  management.cert.pem: {{ .Values.rabbitmq.management.cert | b64enc | quote }}
  management.key.pem: {{ .Values.rabbitmq.management.key | b64enc | quote }}
  {{- else if and .Values.rabbitmq.management.enabled .Values.rabbitmq.management.path.cacert .Values.rabbitmq.management.path.cert .Values.rabbitmq.management.path.key }}
  management.cacert.pem: {{ .Files.Get .Values.rabbitmq.management.path.cacert | b64enc | quote }}
  management.cert.pem: {{ .Files.Get .Values.rabbitmq.management.path.cert | b64enc | quote }}
  management.key.pem: {{ .Files.Get .Values.rabbitmq.management.path.key | b64enc | quote }}
  {{ end }}
  {{- if and .Values.rabbitmq.prometheus.tls.enabled .Values.rabbitmq.prometheus.tls.cacert .Values.rabbitmq.prometheus.tls.cert .Values.rabbitmq.prometheus.tls.key }}
  prometheus.cacert.pem: {{ .Values.rabbitmq.prometheus.tls.cacert | b64enc | quote }}
  prometheus.cert.pem: {{ .Values.rabbitmq.prometheus.tls.cert | b64enc | quote }}
  prometheus.key.pem: {{ .Values.rabbitmq.prometheus.tls.key | b64enc | quote }}
  {{- else if and .Values.rabbitmq.prometheus.tls.enabled .Values.rabbitmq.prometheus.tls.path.cacert .Values.rabbitmq.prometheus.tls.path.cert .Values.rabbitmq.prometheus.tls.path.key }}
  prometheus.cacert.pem: {{ .Files.Get .Values.rabbitmq.prometheus.tls.path.cacert | b64enc | quote }}
  prometheus.cert.pem: {{ .Files.Get .Values.rabbitmq.prometheus.tls.path.cert | b64enc | quote }}
  prometheus.key.pem: {{ .Files.Get .Values.rabbitmq.prometheus.tls.path.key | b64enc | quote }}
  {{- end }}
  {{- range $item := .Values.tlsClient }}
  {{ $item.name }}.cacert.pem: {{ $item.cacert | b64enc | quote }}
  {{ $item.name }}.cert.pem: {{ $item.cert | b64enc | quote }}
  {{ $item.name }}.key.pem: {{ $item.key | b64enc | quote }}
  {{- end }}
{{ end }}

---

{{if .Values.rabbitmq.tls.certmanager.used }}
apiVersion: {{ template "certificateVersion" . }}
kind: Certificate
metadata:
  name: {{ template "rabbitmq.fullname" . }}-crmq-server-cert-secret
  namespace: {{ .Release.Namespace }}
spec:
  secretName: {{ template "rabbitmq.fullname" . }}-crmq-server-cert-secret
  usages:
  - server auth
  - client auth
  duration: {{ .Values.rabbitmq.tls.certmanager.duration }}
  renewBefore: {{ .Values.rabbitmq.tls.certmanager.renewBefore }}
  keySize: {{ .Values.rabbitmq.tls.certmanager.keySize }}
  {{- if .Values.rabbitmq.tls.certmanager.commonName }}
  commonName: "{{ .Values.rabbitmq.tls.certmanager.commonName }}
  {{- else }}
  commonName: {{ printf "%s-server" (include "rabbitmq.fullname" .) | quote }}
  {{- end }}
  dnsNames:
{{- if .Values.rabbitmq.tls.certmanager.dnsNames }}
{{ toYaml .Values.rabbitmq.tls.certmanager.dnsNames | indent 4 }}
{{- else }}
  {{ printf "- %s" (include "rabbitmq.fullname" .) | indent 2 }}
  {{ printf "- %s.%s" (include "rabbitmq.fullname" .) .Release.Namespace | indent 2 }}
  {{ printf "- %s.%s.%s" (include "rabbitmq.fullname" .) .Release.Namespace .Values.rabbitmq.tls.certmanager.domain | indent 2 }}
{{- end }}
  {{- if .Values.rabbitmq.tls.certmanager.ipAddresses }}
  ipAddresses:
{{ toYaml .Values.rabbitmq.tls.certmanager.ipAddresses | indent 4 }}
  {{- end }}
  issuerRef:
    name: {{ .Values.rabbitmq.tls.certmanager.issuerName }}
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: {{ .Values.rabbitmq.tls.certmanager.issuerType }}
    group: {{ .Values.rabbitmq.tls.certmanager.issuerGroup }}
{{ end }}

---

{{if .Values.rabbitmq.management.certmanager.used }}
apiVersion: {{ template "certificateVersion" . }}
kind: Certificate
metadata:
  name: {{ template "rabbitmq.fullname" . }}-crmq-management-cert-secret
  namespace: {{ .Release.Namespace }}
spec:
  secretName: {{ template "rabbitmq.fullname" . }}-crmq-management-cert-secret
  usages:
  - server auth
  - client auth
  duration: {{ .Values.rabbitmq.management.certmanager.duration }}
  renewBefore: {{ .Values.rabbitmq.management.certmanager.renewBefore }}
  keySize: {{ .Values.rabbitmq.management.certmanager.keySize }}
  {{- if .Values.rabbitmq.management.certmanager.commonName }}
  commonName: "{{ .Values.rabbitmq.management.certmanager.commonName }}
  {{- else }}
  commonName: {{ printf "%s-management" (include "rabbitmq.fullname" .) | quote }}
  {{- end }}
  dnsNames:
{{- if .Values.rabbitmq.management.certmanager.dnsNames }}
{{ toYaml .Values.rabbitmq.management.certmanager.dnsNames | indent 4 }}
{{- else }}
  {{ printf "- %s" (include "rabbitmq.management.service" .) | indent 2 }}
  {{ printf "- %s.%s" (include "rabbitmq.management.service" .) .Release.Namespace | indent 2 }}
  {{ printf "- %s.%s.%s" (include "rabbitmq.management.service" .) .Release.Namespace .Values.rabbitmq.management.certmanager.domain | indent 2 }}
{{- end }}
  {{- if .Values.rabbitmq.management.certmanager.ipAddresses }}
  ipAddresses:
{{ toYaml .Values.rabbitmq.management.certmanager.ipAddresses | indent 4 }}
  {{- end }}
  issuerRef:
    name: {{ .Values.rabbitmq.management.certmanager.issuerName }}
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: {{ .Values.rabbitmq.management.certmanager.issuerType }}
    group: {{ .Values.rabbitmq.management.certmanager.issuerGroup }}
{{ end }}

---

{{if .Values.rabbitmq.prometheus.tls.certmanager.used }}
apiVersion: {{ template "certificateVersion" . }}
kind: Certificate
metadata:
  name: {{ template "rabbitmq.fullname" . }}-crmq-prometheus-cert-secret
  namespace: {{ .Release.Namespace }}
spec:
  secretName: {{ template "rabbitmq.fullname" . }}-crmq-prometheus-cert-secret
  usages:
  - server auth
  - client auth
  duration: {{ .Values.rabbitmq.prometheus.tls.certmanager.duration }}
  renewBefore: {{ .Values.rabbitmq.prometheus.tls.certmanager.renewBefore }}
  keySize: {{ .Values.rabbitmq.prometheus.tls.certmanager.keySize }}
  {{- if .Values.rabbitmq.prometheus.tls.certmanager.commonName }}
  commonName: "{{ .Values.rabbitmq.prometheus.tls.certmanager.commonName }}
  {{- else }}
  commonName: {{ printf "%s-prometheus" (include "rabbitmq.fullname" .) | quote }}
  {{- end }}
  dnsNames:
{{- if .Values.rabbitmq.prometheus.tls.certmanager.dnsNames }}
{{ toYaml .Values.rabbitmq.prometheus.tls.certmanager.dnsNames | indent 4 }}
{{- else }}
  {{ printf "- %s" (include "rabbitmq.prometheus.service" .) | indent 2 }}
  {{ printf "- %s.%s" (include "rabbitmq.prometheus.service" .) .Release.Namespace | indent 2 }}
  {{ printf "- %s.%s.%s" (include "rabbitmq.prometheus.service" .) .Release.Namespace .Values.rabbitmq.prometheus.tls.certmanager.domain | indent 2 }}
{{- end }}
  {{- if .Values.rabbitmq.prometheus.tls.certmanager.ipAddresses }}
  ipAddresses:
{{ toYaml .Values.rabbitmq.prometheus.tls.certmanager.ipAddresses | indent 4 }}
  {{- end }}
  issuerRef:
    name: {{ .Values.rabbitmq.prometheus.tls.certmanager.issuerName }}
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: {{ .Values.rabbitmq.prometheus.tls.certmanager.issuerType }}
    group: {{ .Values.rabbitmq.prometheus.tls.certmanager.issuerGroup }}
{{ end }}

---

{{if .Values.ingress.certmanager.used }}
apiVersion: {{ template "certificateVersion" . }}
kind: Certificate
metadata:
  name: {{ .Values.ingress.tlsSecret }}
  namespace: {{ .Release.Namespace }}
spec:
  secretName: {{  .Values.ingress.tlsSecret }}
  duration: {{ .Values.ingress.certmanager.duration }}
  renewBefore: {{ .Values.ingress.certmanager.renewBefore }}
  keySize: {{ .Values.ingress.certmanager.keySize }}
  dnsNames: 
{{- if .Values.ingress.certmanager.dnsNames }}
{{ .Values.ingress.certmanager.dnsNames | indent 2 }}
{{- else }}
  - ""
{{- end }}
  issuerRef:
    name: {{ .Values.ingress.certmanager.issuerName }}
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: {{ .Values.ingress.certmanager.issuerType }}
    group: {{ .Values.ingress.certmanager.issuerGroup }}
{{ end }}



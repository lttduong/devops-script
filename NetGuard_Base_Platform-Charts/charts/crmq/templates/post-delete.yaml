apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "postDeleteJobName" . }}
  labels:
    app: {{ template "rabbitmq.name" . }}-post-delete
    chart: {{ template "rabbitmq.chart" .  }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    {{- include "crmq.commonLabels" . | indent 4 }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "0"
    {{- if .Values.hooks.deletePolicy }}
    "helm.sh/hook-delete-policy": {{ .Values.hooks.deletePolicy }}
    {{- else }}
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation
    {{- end }}
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: {{ template "rabbitmq.name" . }}-post-delete-job
        chart: {{ template "rabbitmq.chart" .  }}
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        {{- include "crmq.commonLabels" . | indent 8 }}
    spec:
      restartPolicy: Never
      {{- if .Values.rbac.enabled}}
      serviceAccountName: {{ template "rabbitmq.fullname" . }}-post-del
      {{- else if not ( empty .Values.rbac.serviceAccountNamePostDel ) }}
      serviceAccountName: "{{ .Values.rbac.serviceAccountNamePostDel }}"
      {{- else }}
      serviceAccountName: "{{ .Values.rbac.serviceAccountName }}"
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      containers:
      - name: {{ template "postDeleteContainerName" . }}
        image: "{{ .Values.global.registry1 }}/{{ .Values.kubectlImage.repository }}:{{ .Values.kubectlImage.tag }}"
        command:
        - sh
        - -ec
        - |
          {{- if and .Values.persistence.data.enabled (not .Values.persistence.reservePvc) }}
          kubectl delete pvc --namespace {{ .Release.Namespace }} -l release={{ .Release.Name }},app={{ template "rabbitmq.name" . }}
          {{- end }}
          {{- if .Values.postDeleteForceClean.enabled }}
          kubectl delete role --namespace {{ .Release.Namespace }} -l release={{ .Release.Name }},app={{ template "rabbitmq.name" . }}
          kubectl delete rolebinding --namespace {{ .Release.Namespace }} -l release={{ .Release.Name }},app={{ template "rabbitmq.name" . }}
          kubectl delete svc --namespace {{ .Release.Namespace }} -l release={{ .Release.Name }},app={{ template "rabbitmq.name" . }}
          kubectl delete ing --namespace {{ .Release.Namespace }} -l release={{ .Release.Name }},app={{ template "rabbitmq.name" . }}
          {{- end }}
          secrets=$(kubectl get secret --namespace {{ .Release.Namespace }} -l owner!=helm -o custom-columns=:metadata.name | grep "{{ .Release.Name }}\|{{ template "rabbitmq.fullname" . }}" | grep -v "post-del")
          for secret in $secrets
          do
            kubectl delete secret --namespace {{ .Release.Namespace }} $secret
          done
        {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        {{- end }}

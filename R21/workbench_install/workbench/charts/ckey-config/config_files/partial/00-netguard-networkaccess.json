{{ if .Values.enableNA }}
{
  "policy": "SKIP",
   "clients":[
      {
         "clientId":"netguard-networkaccess",
         "name":"NetGuard Network Access",
         "surrogateAuthRequired":false,
         "enabled":true,
         "clientAuthenticatorType":"client-secret",
         "secret":{{ .Values.global.config.ckey.client.secret.netguardNetworkAccessSecret | quote }},
         "redirectUris":[
            "/netguard_framework*"
         ],
         "webOrigins":[

         ],
         "notBefore":0,
         "bearerOnly":false,
         "consentRequired":false,
         "standardFlowEnabled":true,
         "implicitFlowEnabled":false,
         "directAccessGrantsEnabled":true,
         "serviceAccountsEnabled":true,
         "publicClient":false,
         "frontchannelLogout":false,
         "protocol":"openid-connect",
         "attributes":{
            "saml.assertion.signature":"false",
            "saml.force.post.binding":"false",
            "saml.multivalued.roles":"false",
            "saml.encrypt":"false",
            "saml.server.signature":"false",
            "saml.server.signature.keyinfo.ext":"false",
            "exclude.session.state.from.auth.response":"false",
            "saml_force_name_id_format":"false",
            "saml.client.signature":"false",
            "tls.client.certificate.bound.access.tokens":"false",
            "saml.authnstatement":"false",
            "display.on.consent.screen":"false",
            "saml.onetimeuse.condition":"false"
         },
         "authenticationFlowBindingOverrides":{

         },
         "fullScopeAllowed":true,
         "nodeReRegistrationTimeout":-1,
         "protocolMappers":[
            {
               "name":"Client IP Address",
               "protocol":"openid-connect",
               "protocolMapper":"oidc-usersessionmodel-note-mapper",
               "consentRequired":false,
               "config":{
                  "user.session.note":"clientAddress",
                  "id.token.claim":"true",
                  "access.token.claim":"true",
                  "claim.name":"clientAddress",
                  "jsonType.label":"String"
               }
            },
            {
               "name":"Client ID",
               "protocol":"openid-connect",
               "protocolMapper":"oidc-usersessionmodel-note-mapper",
               "consentRequired":false,
               "config":{
                  "user.session.note":"clientId",
                  "id.token.claim":"true",
                  "access.token.claim":"true",
                  "claim.name":"clientId",
                  "jsonType.label":"String"
               }
            },
            {
               "name":"Client Host",
               "protocol":"openid-connect",
               "protocolMapper":"oidc-usersessionmodel-note-mapper",
               "consentRequired":false,
               "config":{
                  "user.session.note":"clientHost",
                  "id.token.claim":"true",
                  "access.token.claim":"true",
                  "claim.name":"clientHost",
                  "jsonType.label":"String"
               }
            }
         ],
         "defaultClientScopes": [
           "web-origins",
           "role_list",
           "profile",
           "roles",
           "email"
         ],
         "optionalClientScopes":[
            "address",
            "phone",
            "offline_access"
         ],
         "access":{
            "view":true,
            "configure":true,
            "manage":true
         }
      }
   ]
}
{{ else }}
{
    "policy": "SKIP",
    "clients":[
      {
         "clientId":"netguard-framework"
      }
      ]
}
{{ end }}
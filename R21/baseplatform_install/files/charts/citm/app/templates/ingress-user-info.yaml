## Start of custom chart file
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: base-platform-user-info
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /netguard-base/user-info
    kubernetes.io/ingress.class: {{ .Values.controller.ingressClass }}
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/secure-backends: "true"
    nginx.ingress.kubernetes.io/limit-rps: "5"
    nginx.ingress.kubernetes.io/limit-connections: "2"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      access_by_lua_block {
        local keycloak=require("keycloak")
        local _, res =  keycloak.authenticate()
        keycloak.getUserInfo(res.access_token)
      }
spec:
  rules:
  - http:
      paths:
      - path: /netguard-base/user-info($)
        backend:
#        Please  note that user should not be redirected to default backend. Lua code should serve http response.
#        added due to the fact that ingress controller requires available service to work
          serviceName: {{ if .Values.defaultBackend.enabled }}{{ .Release.Name }}-default404{{ else }}{{ .Values.controller.defaultBackendService }}{{ end }}
          servicePort: 8080
## End of custom chart file

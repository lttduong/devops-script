{{- if and .Values.rbac.create .Values.rbac.podSecurityPolicy.enabled }}
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "controller.fullname" . }}
spec:
  allowedCapabilities:
    - NET_BIND_SERVICE
{{- if .Values.controller.securityContextPrivileged }}
  privileged: true
{{- else }}
  privileged: false
{{- end }}
  # We need this for setcap cap_net_bind_service
  allowPrivilegeEscalation: true
  volumes:
    - 'configMap'
    - 'secret'
    - 'hostPath'
{{- if .Values.controller.hostNetwork }}
  hostNetwork: {{ .Values.controller.hostNetwork }}
  hostPorts:
  - min: {{ .Values.controller.httpPort  }}
    max: {{ .Values.controller.httpPort  }}
  - min: {{ .Values.controller.httpsPort  }}
    max: {{ .Values.controller.httpsPort  }}
{{- end }}    
{{- range $key, $value := .Values.tcp }}
  # {{ $key }}-tcp
  - min: {{ $key }}
    max: {{ $key }}
{{- end }}
{{- range $key, $value := .Values.udp }}
  # {{ $key }}-udp
  - min: {{ $key }}
    max: {{ $key }}
{{- end }}
  hostIPC: false
  hostPID: false
  runAsUser:
{{- if or .Values.controller.workerProcessAsRoot .Values.controller.securityContextPrivileged }}
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 0
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 0
        max: 65535
{{- else }}
    # Require the container to run without root privileges.
    rule: 'MustRunAsNonRoot'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
{{- end }}
  readOnlyRootFilesystem: false
  seLinux:
    rule: 'RunAsAny'
{{- end }}

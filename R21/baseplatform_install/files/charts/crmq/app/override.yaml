rabbitmq:
  clustering:
    address_type: hostname
  environment: |-
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS="+A 128"
      PLUGINS_DIR="/var/lib/rabbitmq/plugins:/usr/lib/rabbitmq/plugins:$RABBITMQ_HOME/plugins"
      RABBITMQ_USE_LONGNAME="true"
  environmentIpv6: |-
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS="+A 128  -kernel inetrc '/etc/rabbitmq/erl_inetrc'  -proto_dist inet6_tcp"
      RABBITMQ_CTL_ERL_ARGS="-proto_dist inet6_tcp"
      PLUGINS_DIR="/var/lib/rabbitmq/plugins:/usr/lib/rabbitmq/plugins:$RABBITMQ_HOME/plugins"
      RABBITMQ_USE_LONGNAME="true"
  ## Configution file content
  configuration: |-
      ## Clustering
      cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
      cluster_formation.k8s.host = 10.96.0.1
      cluster_formation.k8s.port = 443
      cluster_formation.k8s.address_type = hostname
      cluster_partition_handling = autoheal
      ## queue master locator
      queue_master_locator=min-masters
      ## disable guest user from remote access
      loopback_users.guest = true
      auth_mechanisms.1 = PLAIN
      auth_mechanisms.2 = AMQPLAIN
      auth_mechanisms.3 = EXTERNAL
      ssl_cert_login_from = common_name
      ssl_options.versions.1 = tlsv1.2
      ssl_options.ciphers.1 = DHE-RSA-AES256-GCM-SHA384
      ssl_options.ciphers.2 = DHE-RSA-AES128-GCM-SHA256
      ssl_options.ciphers.3 = DHE-RSA-AES256-SHA256
      ssl_options.ciphers.4 = DHE-RSA-AES128-SHA256
      ssl_options.ciphers.5 = ECDHE-RSA-AES256-GCM-SHA384
      ssl_options.ciphers.6 = ECDHE-RSA-AES128-GCM-SHA256
      ssl_options.ciphers.7 = ECDHE-ECDSA-AES256-GCM-SHA384
      ssl_options.ciphers.8 = ECDHE-ECDSA-AES128-GCM-SHA256
      ssl_options.ciphers.9 = ECDHE-RSA-AES256-SHA384
      ssl_options.ciphers.10 = ECDHE-RSA-AES128-SHA256
      ssl_options.ciphers.11 = ECDHE-ECDSA-AES256-SHA384
      ssl_options.ciphers.12 = ECDHE-ECDSA-AES128-SHA256
      ## Logs
      log.console = true
      log.file = false
      ## Password policy
      credential_validator.validation_backend = rabbit_credential_validator_password_regexp
      credential_validator.regexp = ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!%"'`$& ()*+,\-.\/:;<=>?@\[\]^~_{|}])[A-Za-z\d!%"'`$& ()*+,\-.\/:;<=>?@\[\]^~_{|}]{8,150}$

  ## Plugins to enable
  plugins: |-
      [rabbitmq_management,rabbitmq_peer_discovery_k8s,rabbitmq_auth_mechanism_ssl].

  tls:
    nodePort: 30672
    fail_if_no_peer_cert: "false"
    certmanager:
      used: true

  management:
    port: 15671
    nodePort: 30156
    certmanager:
      used: true
      dnsNames:
        - crmq-crmq-ext
        - crmq-crmq-ext.<BP_NAMESPACE_PLACEHOLDER>.svc
        - crmq-crmq-ext.<BP_NAMESPACE_PLACEHOLDER>.<DNS_DOMAIN_PLACEHOLDER>

  prometheus:
    enabled: true
    port: 15691
    nodePort: 30157

  nodePort: 30673

serviceType: NodePort

persistence:
  crmq:
    localPv: false

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: is_worker
          operator: In
          values:
          - "true"

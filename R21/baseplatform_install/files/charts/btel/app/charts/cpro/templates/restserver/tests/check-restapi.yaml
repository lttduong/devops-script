{{- if .Values.restserver.enabled -}}
apiVersion: v1
kind: Pod
metadata:
  name: {{ template "prometheus.restserver.helmTestDeploymentName" . }}
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": "{{ .Values.helmtest.deletepolicy }}"
    sidecar.istio.io/inject: "{{ .Values.istio.enable }}"
spec:
  containers:
    - name: {{ template "prometheus.restserver.helmTestRestServerContainerName" . }} 
      image: "{{ .Values.global.registry1 }}/{{ .Values.tools.image.imageRepo }}:{{ .Values.tools.image.imageTag }}"
      resources:
{{ toYaml .Values.configmapReload.resources | indent 12 }}
      volumeMounts:
        - name: gittest 
          mountPath: /test/
      command:
        - bash
        - -ec
        - |
          {{- if .Values.istio.enable }}
          until curl --head localhost:15000
          do
            echo "Waiting for istio-proxy ..."
            sleep 1
          done
          echo "istio-proxy available"
          {{- end }}
          source /test/curl_cmd.sh
          run_curl_success "POST" "alertfiles" "fileName=/etc/config/testfiles"; RC1=$?
          run_curl_success "GET" "alertfiles"; RC2=$?
          run_curl_success "DELETE" "alertfiles/%2Fetc%2Fconfig%2Ftestfiles"; RC3=$?
          run_curl_success "POST" "alertrules" "fileName=/etc/config/alerts&groupName=pre-defined-alert-rules" "-d@/test/newalerts.json"; RC4=$?
          run_curl_success "GET" "alertrules" "fileName=/etc/config/alerts"; RC5=$?;
          run_curl_success "PUT" "alertrules/alerttest" "fileName=/etc/config/alerts&groupName=pre-defined-alert-rules" "-d@/test/newalerts.json"; RC6=$?
          run_curl_success "GET" "alertrules/alerttest" "fileName=/etc/config/alerts&groupName=pre-defined-alert-rules"; RC7=$?
          run_curl_success "DELETE" "alertrules/alerttest" "fileName=/etc/config/alerts&groupName=pre-defined-alert-rules"; RC8=$?
          run_curl_success "GET" "alertrules" "fileName=/etc/config/alerts"; RC9=$?
          {{- if .Values.istio.enable }}
          curl -X POST http://localhost:15000/quitquitquit
          {{- end }}
          if [[ $RC1 == 0 ]] && [[ $RC2 == 0 ]] && [[ $RC3 == 0 ]] && [[ $RC4 == 0 ]] && [[ $RC5 == 0 ]] && [[ $RC6 == 0 ]] && [[ $RC7 == 0 ]] && [[ $RC8 == 0 ]] && [[ $RC9 == 0 ]]; then
            exit 0
          else
            exit 1
          fi
  volumes:
    - name: gittest
      configMap:
        name: "{{ .Release.Name }}-{{ .Chart.Name }}-helmtest-restapi-configmap"
  restartPolicy: Never
{{- end -}}

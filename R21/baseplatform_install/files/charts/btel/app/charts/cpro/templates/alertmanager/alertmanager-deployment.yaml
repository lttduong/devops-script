{{- if .Values.alertmanager.enabled -}}
{{- if not .Values.ha.enabled -}}
{{- if not .Values.deployOnComPaaS }}
apiVersion: {{ template "prometheus.apiVersionExtensionsV1Beta1orV1" . }}
kind: Deployment
metadata:
  labels:
    app: {{ template "prometheus.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.alertmanager.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
{{- include "prometheus-labels" (tuple .Values.global.labels) | indent 4}}
  name: {{ template "prometheus.alertmanager.DeploymentOrStsName" . }}
{{- if .Values.global.annotations }}
  annotations:
{{- include "prometheus-annotations" (tuple .Values.global.annotations) | indent 4}}
{{- end }}
spec:
  replicas: 1
  {{- if .Values.alertmanager.strategy }}
  strategy:
{{ toYaml .Values.alertmanager.strategy | indent 4 }}
  {{- end }}
  {{- if semverCompare ">=1.16.0-0" .Capabilities.KubeVersion.GitVersion }}
  selector:
   matchLabels:
    app: {{ template "prometheus.name" . }}
    component: "{{ .Values.alertmanager.name }}"
    release: {{ .Release.Name }}
  {{- end }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "{{ .Values.istio.enable }}"
{{- if and (.Values.istio.enable) (.Values.istio.mtls_enable) }}
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
{{- end }}
    {{- if .Values.alertmanager.podAnnotations }}
{{ toYaml .Values.alertmanager.podAnnotations | indent 8 }}
    {{- end }}
{{- include "custom-annotations" (tuple .Values.custom.pod.annotations) | indent 8}}
{{- if .Values.rbac.pspUseAppArmor }}
{{- include "custom-annotations" (tuple .Values.custom.pod.apparmorAnnotations) | indent 8}}
{{- end }}
      labels:
        app: {{ template "prometheus.name" . }}
        component: "{{ .Values.alertmanager.name }}"
        release: {{ .Release.Name }}
        {{- include "custom-labels" (tuple .Values.custom.pod.labels) | indent 8}}
    spec:
{{- if .Values.alertmanager.schedulerName }}
      schedulerName: "{{ .Values.alertmanager.schedulerName }}"
{{- end }}
      serviceAccountName: {{ template "prometheus.serviceAccountName" . }}
      {{- if or .Values.alertmanager.securityContext .Values.seLinuxOptions.enabled }}
      securityContext:
{{- if .Values.alertmanager.securityContext }}
{{ toYaml .Values.alertmanager.securityContext | indent 8 }}
{{- end }}
{{- if .Values.seLinuxOptions.enabled }}
        seLinuxOptions:
          level: {{ .Values.seLinuxOptions.level }}
          role: {{ .Values.seLinuxOptions.role }}
          type: {{ .Values.seLinuxOptions.type }}
          user: {{ .Values.seLinuxOptions.user }}
{{- end }}
      {{- end }}
      containers:
        - name: {{ template "prometheus.alertmanager.alertmanagerContainerName" . }}
          image: "{{ .Values.global.registry1 }}/{{ .Values.alertmanager.image.imageRepo }}:{{ .Values.alertmanager.image.imageTag }}"
          imagePullPolicy: "{{ .Values.alertmanager.image.imagePullPolicy }}"
          env:
            {{- range $key, $value := .Values.alertmanager.extraEnv }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          args:
          {{- if .Values.alertmanager.retention.time }}
            - --data.retention={{ .Values.alertmanager.retention.time }}
          {{- end }}
            - --config.file=/etc/config/alertmanager.yml
            - --storage.path={{ .Values.alertmanager.persistentVolume.mountPath }}
            - --cluster.advertise-address=[$(POD_IP)]:6783
          {{- range $key, $value := .Values.alertmanager.extraArgs }}
            - --{{ $key }}={{ $value }}
          {{- end }} 
          {{- if .Values.alertmanager.baseURL }}
            - --web.external-url={{ .Values.alertmanager.baseURL }}
          {{- end }}
          {{- if ne .Values.alertmanager.prefixURL "" }}
            - --web.route-prefix=/{{ .Values.alertmanager.prefixURL }}
          {{- end }}

          ports:
            - name: tcp-9093
              containerPort: 9093
           {{- if .Values.alertmanager.service.enableMeshPeer }}
            - name: tcp-meshpeer
              containerPort: 6783
           {{- end }}
          readinessProbe:
            httpGet:
              path: {{ template "alertmanager.routePrefixURL" . }}/#/status
              port: tcp-9093
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
{{ toYaml .Values.alertmanager.resources | indent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: "{{ .Values.alertmanager.persistentVolume.mountPath }}"
              subPath: "{{ .Values.alertmanager.persistentVolume.subPath }}"
            {{ if .Values.alertmanager.outboundTLS.enabled }}
            - name: tls
              readOnly: true
              mountPath: "/etc/config/alertmanager/tls"
            {{- end }}

        - name: {{ template "prometheus.alertmanager.alertmanagerReloadContainerName" . }}
          image: "{{ .Values.global.registry1 }}/{{ .Values.configmapReload.image.imageRepo }}:{{ .Values.configmapReload.image.imageTag }}"
          imagePullPolicy: "{{ .Values.configmapReload.image.imagePullPolicy }}"
          securityContext:
            runAsUser: 1999
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://localhost:9093{{ template "alertmanager.routePrefixURL" . }}/-/reload
          resources:
{{ toYaml .Values.configmapReload.resources | indent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
    {{- if .Values.alertmanager.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.alertmanager.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.alertmanager.tolerations }}
      tolerations:
{{ toYaml .Values.alertmanager.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.alertmanager.affinity }}
      affinity:
{{ toYaml .Values.alertmanager.affinity | indent 8 }}
    {{- end }}
      volumes:
        {{ if .Values.alertmanager.outboundTLS.enabled }}
        - name: tls
          secret:
            ## Start of custom modification of original chart
            secretName: cnot-tls
            items:
            - key: tls.crt
              path: alertmanager.cert
            ## End of custom modification of original chart
        {{- end }}
        - name: config-volume
          configMap:
            name: {{ if .Values.alertmanager.configMapOverrideName }}{{ .Release.Name }}-{{ .Values.alertmanager.configMapOverrideName }}{{- else }}{{ template "prometheus.alertmanager.fullname" . }}{{- end }}
        - name: storage-volume
        {{- if .Values.alertmanager.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.alertmanager.persistentVolume.existingClaim }}{{ .Values.alertmanager.persistentVolume.existingClaim }}{{- else }}{{ template "prometheus.alertmanager.fullname" . }}{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
{{- end -}}
{{- end -}}
{{- end -}}

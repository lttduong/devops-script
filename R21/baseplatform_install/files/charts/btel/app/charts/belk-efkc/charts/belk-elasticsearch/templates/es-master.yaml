{{- include "elasticsearch.istio.initIstio" . }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "elasticsearch.master.fullname" . }}
  labels:
    component: elasticsearch
    role: master 
    release: {{ .Release.Name | quote }}
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: {{ .Values.global.seccompAllowedProfileNames }}
    seccomp.security.alpha.kubernetes.io/defaultProfileName: {{ .Values.global.seccompDefaultProfileName }}
{{- if .Values.custom }}
{{- if .Values.custom.annotations }}
{{- include "elasticsearch.csf-toolkit-helm.annotations" (tuple .Values.custom.annotations) | indent 4}}
{{- end }}
{{- end }}
spec:
  serviceName: {{ template "elasticsearch.fullname" . }}-discovery
  replicas: {{.Values.elasticsearch_master.replicas }}
  podManagementPolicy: {{ .Values.elasticsearch_master.podManagementPolicy }}
  selector:
    matchLabels:
      component: elasticsearch
      role: master
      release: {{ .Release.Name | quote }}
  updateStrategy:
{{ toYaml .Values.elasticsearch_master.updateStrategy | indent 4 }}
  template:
    metadata:
      labels:
        component: elasticsearch
        role: master 
        release: {{ .Release.Name | quote }}
        {{- if .Values.elasticsearch_master.podLabels }}
        {{- include "elasticsearch.custom-labels" (tuple .Values.elasticsearch_master.podLabels) | indent 8}}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/es-secret.yaml") . | sha256sum }}
        {{- if and (.Values.istio.enabled) (ne $.istioVersion 1.4) }}
        traffic.sidecar.istio.io/excludeInboundPorts: "9300"
        traffic.sidecar.istio.io/excludeOutboundPorts: "9300"
        {{- end }}
    spec:
      ## Start of custom modification of original chart for CSFID-2092
      initContainers:
        - name: {{ template "elasticsearch.data.fullname" . }}-init
          image: {{ .Values.global.registry }}/{{ .Values.global.certsConverter.image.name }}:{{ .Values.global.certsConverter.image.tag }}
          imagePullPolicy: {{.Values.elasticsearch_master.ImagePullPolicy}}
          command: ["certs_converter"]
          args: ["--certs-dir={{ .Values.volumes.path.certs }}",
                 "--output={{ .Values.volumes.path.keys }}",
                 "--format=JKS"]
          env:
            - name: TS_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: trustpass
            - name: KS_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: keypass
          volumeMounts:
            - name: {{ template "fullname" . }}-tls
              mountPath: {{ .Values.volumes.path.certs }}
              readOnly: true
            - name: es-data-generated-certs
              mountPath: {{ .Values.volumes.path.keys }}
        - name: {{ template "elasticsearch.data.fullname" . }}-init-client-jks
          image: {{ .Values.global.registry }}/{{ .Values.global.certsConverter.image.name }}:{{ .Values.global.certsConverter.image.tag }}
          imagePullPolicy: {{.Values.elasticsearch_master.ImagePullPolicy}}
          command: ["certs_converter"]
          args: ["--certs-dir={{ .Values.volumes.path.certs }}",
                 "--output={{ .Values.volumes.path.keys }}",
                 "--format=JKS"]
          env:
            - name: TS_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: trustpass
            - name: KS_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: keypass
          volumeMounts:
            - name: {{ template "fullname" . }}-tls-client
              mountPath: {{ .Values.volumes.path.certs }}
              readOnly: true
            - name: es-data-generated-certs-client-jks
              mountPath: {{ .Values.volumes.path.keys }}
        - name: {{ template "elasticsearch.data.fullname" . }}-init-client-pem
          image: {{ .Values.global.registry }}/{{ .Values.global.certsConverter.image.name }}:{{ .Values.global.certsConverter.image.tag }}
          imagePullPolicy: {{.Values.elasticsearch_master.ImagePullPolicy}}
          command: ["certs_converter"]
          args: ["--certs-dir={{ .Values.volumes.path.certs }}",
                 "--output={{ .Values.volumes.path.keys }}",
                 "--format=PEM"]
          volumeMounts:
            - name: {{ template "fullname" . }}-tls-client
              mountPath: {{ .Values.volumes.path.certs }}
              readOnly: true
            - name: es-data-generated-certs-client-pem
              mountPath: {{ .Values.volumes.path.keys }}
      ## End of custom modification of original chart
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        {{- if .Values.es_securityContext.fsGroup }}
        fsGroup: {{ .Values.es_securityContext.fsGroup }}
        {{- end }}
        {{- if .Values.es_securityContext.supplementalGroups }}
        supplementalGroups: {{ .Values.es_securityContext.supplementalGroups }}
        {{- end }}
        {{- if .Values.es_securityContext.seLinuxOptions }}
        seLinuxOptions:
{{ toYaml .Values.es_securityContext.seLinuxOptions | indent 10 }}
        {{- end }}
      {{- if or .Values.elasticsearch_master.antiAffinity .Values.elasticsearch_master.nodeAffinity }}
      affinity:
      {{- end }}
      {{- if eq .Values.elasticsearch_master.antiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  release: {{ .Release.Name | quote }}
                  component: elasticsearch
                  role: master
      {{- else if eq .Values.elasticsearch_master.antiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  release: {{ .Release.Name | quote }}
                  component: elasticsearch
                  role: master
      {{- end }}
      {{- if .Values.elasticsearch_master.podAffinity }}
        podAffinity:
{{ toYaml .Values.elasticsearch_master.podAffinity | indent 10 }}
      {{- end }}
      serviceAccountName: {{ default ( default (printf "%s-es-sa" ( include "elasticsearch.fullname" . )) .Values.global.serviceAccountName ) .Values.serviceAccountName }}
      {{- with .Values.elasticsearch_master.nodeAffinity }}
        nodeAffinity:
{{ toYaml . | indent 10 }}
      {{- end }}
{{- if .Values.elasticsearch_master.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.elasticsearch_master.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.elasticsearch_master.tolerations }}
      tolerations:
{{ toYaml .Values.elasticsearch_master.tolerations | indent 8 }}
{{- end }}
      containers:
      - name: {{ template "elasticsearch.master.container" . }}
        {{- if .Values.searchguard.enable }}
        image: {{.Values.global.registry}}/{{.Values.searchguard.image.repo}}:{{.Values.searchguard.image.tag}}
        {{- else }}
        image: {{.Values.global.registry}}/{{.Values.elasticsearch_master.image.repo}}:{{.Values.elasticsearch_master.image.tag}}
        {{- end }}
        imagePullPolicy: {{.Values.elasticsearch_master.ImagePullPolicy}}
        resources:
{{ toYaml .Values.elasticsearch_master.resources | indent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          capabilities:
             drop:
               - all
        readinessProbe:
          tcpSocket:
            port: 9300
          initialDelaySeconds: {{ .Values.elasticsearch_master.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.elasticsearch_master.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.elasticsearch_master.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.elasticsearch_master.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.elasticsearch_master.readinessProbe.failureThreshold }}
        livenessProbe:
          tcpSocket:
            port: 9300
          initialDelaySeconds: {{ .Values.elasticsearch_master.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.elasticsearch_master.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.elasticsearch_master.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.elasticsearch_master.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.elasticsearch_master.livenessProbe.failureThreshold }}

        env:
          - name: "CLUSTER_NAME"
            value: {{ printf "%s-%s" .Release.Namespace .Release.Name | quote }}
          - name: "NODE_MASTER"
            value: "true"
          - name: "NODE_DATA"
            value: "false"
          - name: "NODE_REMOTE_CLUSTER_CLIENT"
            value: "false"
          - name: "NODE_INGEST"
            value: "false"
          - name: "ES_JAVA_OPTS"
            value: "{{.Values.elasticsearch_master.es_java_opts}}"
          - name: "DISCOVERY_SERVICE"
            value: "{{ template "elasticsearch.fullname" . }}-discovery"
          - name: "NUMBER_OF_REPLICAS" 
            value: "1" 
          - name: NETWORK_HOST
            {{- if .Values.istio.enabled }}
            value: "0.0.0.0"
            {{- else }}
            value: "{{.Values.network_host}}"
            {{- end }}
          {{- if .Values.cbur.enabled }}
          - name: "PATH_REPO"
            value: "/elasticsearch-backup"
          {{- end }}
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: CLUSTER_INITIAL_MASTER_NODES
            value: "{{ template "elasticsearch.endpoints" . }}"
          - name: ISTIO_ENABLED
            value: "{{ .Values.istio.enabled }}"
          {{- if .Values.searchguard.enable }}
          {{- if .Values.searchguard.ciphers }}
          - name: searchguard.ssl.http.enabled_ciphers
            value: "{{ template "elasticsearch.esciphers" . }}"
          {{- end }}
          - name: HTTP_SSL
            {{- if .Values.istio.enabled }}
            value: "false"
            {{- else }}
            value: "{{.Values.searchguard.http_ssl}}"
            {{- end }}
          {{- if or (.Values.istio.enabled) (not .Values.searchguard.http_ssl) }}
          - name: SG_INTERNAL_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ template "elasticsearch.fullname" . }}
                key: adminUsername
          - name: SG_INTERNAL_PWD
            valueFrom:
              secretKeyRef:
                name: {{ template "elasticsearch.fullname" . }}
                key: adminPwd
          {{- end }}
          {{- if not .Values.istio.enabled }}
          - name: "KEYSTORE_TYPE"
            value: "{{.Values.searchguard.keystore_type}}"
          - name: "TRUSTSTORE_TYPE"
            value: "{{.Values.searchguard.truststore_type}}"
          - name: "KEYSTORE_FILEPATH"
            value: "/etc/elasticsearch/certs/keystore.jks"
          - name: "KS_PWD"
            valueFrom:
              secretKeyRef:
                name: {{ template "elasticsearch.fullname" . }}
                key: keypass
          - name: "TRUSTSTORE_FILEPATH"
            value: "/etc/elasticsearch/certs/truststore.jks"
          - name: "TS_PWD"
            valueFrom:
              secretKeyRef:
                name: {{ template "elasticsearch.fullname" . }}
                key: trustpass
          - name: "CLIENT_KEYSTORE_FILEPATH"
            value: "/etc/elasticsearch/certs/client-keystore.jks"
          - name: "AUTH_ADMIN_DN"
            value: "{{.Values.searchguard.auth_admin_identity}}"
          - name: "NODES_DN"
            value: "{{ .Values.searchguard.nodes_dn }}"
          {{- else }}
          - name: "KEYSTORE_FILEPATH"
            value: "/etc/elasticsearch/certs/elasticsearch.jks"
          - name: "KS_PWD"
            valueFrom:
              secretKeyRef:
                name: {{ template "elasticsearch.fullname" . }}
                key: keypass
          - name: "TRUSTSTORE_FILEPATH"
            value: "/etc/elasticsearch/certs/root.jks"
          - name: "TS_PWD"
            valueFrom:
              secretKeyRef:
                name: {{ template "elasticsearch.fullname" . }}
                key: trustpass
          - name: "CLIENT_KEYSTORE_FILEPATH"
            value: "/etc/elasticsearch/certs/admin-keystore.jks"
          - name: "AUTH_ADMIN_DN"
            value: "CN=admin"
          - name: "NODES_DN"
            value: "CN=elasticsearch"
          {{- end }}
          - name: "SG_CONFIG_DIRECTORY"
            value: "/usr/share/elasticsearch/plugins/search-guard-7/sgconfig/"
          {{- end }}
        ports:
        - containerPort: {{.Values.service.master_port}}
          name: tcp-transport
          protocol: TCP
        - containerPort: {{.Values.service.client_port}}
          name: tcp-rest
          protocol: TCP
        volumeMounts:
        - name: masterdir
          mountPath: /data
        {{- if .Values.cbur.enabled }}
        - name: elasticsearch-backup
          mountPath: /elasticsearch-backup
        {{- end }}
        {{- if .Values.searchguard.enable }}
        ## Start of custom modification of original chart for CSFID-2092
        #- name: ssl
        #  mountPath: "/etc/elasticsearch/certs/"
        #  readOnly: true
        - name: es-data-generated-certs
          mountPath: "/etc/elasticsearch/certs/keystore.jks"
          subPath: "keystore.jks"
        - name: es-data-generated-certs
          mountPath: "/etc/elasticsearch/certs/truststore.jks"
          subPath: "truststore.jks"
        - name: es-data-generated-certs-client-jks
          mountPath: "/etc/elasticsearch/certs/client-keystore.jks"
          subPath: "keystore.jks"
        - name: es-data-generated-certs-client-pem
          mountPath: "/etc/elasticsearch/certs/admin.crt.pem"
          subPath: "tls.pem"
        - name: {{ template "fullname" . }}-tls-client
          mountPath: "/etc/elasticsearch/certs/admin.key.pem"
          subPath: "tls.key"
        ## End of custom modification of original chart
        - name: searchguard-config
          mountPath: "/usr/share/elasticsearch/plugins/search-guard-7/sgconfig/"
        {{- end }}
      ## Start of custom modification of original chart for CSFID-2092
        - name: es-config
          mountPath: "/etc/elasticsearch/elasticsearch.yml"
          readOnly: true
          subPath: "elasticsearch.yml"
      ## End of custom modification of original chart
      volumes:
      {{- if .Values.cbur.enabled }}
      - name: "elasticsearch-backup"
      ## Start of custom modification of original chart
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}-nfs-pvc
      # persistentVolumeClaim:
      #   claimName: {{ template "elasticsearch.fullname" . }}-pvc
      ## End of custom modification of original chart      
      {{- end }}
      {{- if .Values.searchguard.enable }}
      ## Start of custom modification of original chart for CSFID-2092
      #- name: ssl
        #secret:
        #  secretName: {{ template "elasticsearch.fullname" . }}
        #  items:
        #  {{- if not .Values.istio.enabled }}
        #  - key: keystore.jks
        #    path: keystore.jks
        #  - key: truststore.jks
        #    path: truststore.jks
        #  - key: client-keystore.jks
        #    path: client-keystore.jks
        #  {{- end }}
        #  {{- if and (not .Values.istio.enabled) (.Values.searchguard.http_ssl) }}
        #  - key: admin.crt.pem
        #    path: admin.crt.pem
        #  - key: admin.key.pem
        #    path: admin.key.pem
        #  {{- end }}
      - name: {{ template "fullname" . }}-tls
        secret:
          secretName: {{ template "elasticsearch.fullname" . }}-tls
          defaultMode: 0600
      - name: es-data-generated-certs
        emptyDir: {}
      - name: {{ template "fullname" . }}-tls-client
        secret:
          secretName: {{ template "fullname" . }}-tls-client
          defaultMode: 0600
      - name: es-data-generated-certs-client-jks
        emptyDir: {}
      - name: es-data-generated-certs-client-pem
        emptyDir: {}        
      ## End of Custom modification of original chart        
      - configMap:
          name: {{ template "elasticsearch.fullname" . }}-searchguard-config
        name: searchguard-config
      {{- end }}
      ## Start of custom modification of original chart for BASE-269
      - name: es-config
        configMap:
          name: {{ template "elasticsearch.fullname" . }}-es-config
          items:
            - key: elasticsearch.yml
              path: elasticsearch.yml
              mode: 0600
      ## End of custom modification of original chart
  volumeClaimTemplates:
  - metadata:
      name: masterdir
      labels:
       app: {{ template "elasticsearch.fullname" . }}
       release: "{{ .Release.Name }}"
       heritage: "{{ .Release.Service }}"
    spec:
      accessModes:
        - {{ .Values.persistence.accessMode | quote }}
      resources:
        requests:
          storage: {{ .Values.persistence.masterStorage | quote }}
    {{- if .Values.persistence.storageClassName }}
      storageClassName: "{{ .Values.persistence.storageClassName }}"
    {{- end }}
     ## Start of custom modification of original chart for CSFID-2094
    {{- if .Values.elasticsearch_master.persistence.createPv }}
      selector:
        matchLabels:
{{ .Values.elasticsearch_master.persistence.labels | indent 12 }}
    {{- end }}
    ## End of custom modification of original chart

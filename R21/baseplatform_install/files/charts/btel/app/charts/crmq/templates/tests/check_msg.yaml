{{- if or (.Values.rbac.enabled) (.Values.rbac.test.enabled) }}
{{- if and .Values.rabbitmq.management.enabled .Values.rabbitmq.amqpSvc }}
apiVersion: v1
kind: Pod
metadata:
{{ if empty .Values.global.podNamePrefix }}
  name: "{{ template "rabbitmq.fullname" . }}-msg-test"
{{ else }}
  name: "{{ .Values.global.podNamePrefix }}{{ template "rabbitmq.fullname" . }}-msg-test"
{{ end }}
  annotations:
    "helm.sh/hook": test-success
    {{- if .Values.istio.enabled }}
    sidecar.istio.io/inject: "false"
    {{- end }}
spec:
  containers:
    - name: {{ default "" .Values.global.containerNamePrefix }}{{ template "rabbitmq.fullname" . }}-msg-test
      image: "{{ .Values.global.registry2 }}/{{ .Values.helmTestImage.repository }}:{{ .Values.helmTestImage.tag }}"
      resources:
        limits:
          cpu: "0.5"
          memory: 256Mi
        requests:
          cpu: "0.25"
          memory: 128Mi
      volumeMounts:
        - name: clientcert
          mountPath: /test/tls/
        - name: testconfigmap
          mountPath: /test/
      command:
         - bash
         - -ec
         - |
           ls -l /test/tls/
           source /test/curl_cmd.sh
           wait_service_available
           run_curl_success "PUT" "exchanges/%2F/ex111"
           wait_service_available
           run_curl_success "PUT" "queues/%2F/que111"
           wait_service_available
           run_curl_success_wbody "POST" "bindings/%2F/e/ex111/q/que111" '{"routing_key":"rk111"}'

           {{- if or ( .Values.rabbitmq.tls.certmanager.used) (and .Values.rabbitmq.tls.cacert .Values.rabbitmq.tls.cert .Values.rabbitmq.tls.key) }}
           echo "tls is enabled"
           {{- if or ( eq .Values.rabbitmq.tls.fail_if_no_peer_cert "false") (eq .Values.rabbitmq.tls.test "yes") }}
           python3 /test/send.py tls
           python3 /test/receive.py tls |grep "helm test"
           {{- end }}
           {{- else }} 
           echo "tls is not enabled"
           python3 /test/send.py nontls
           python3 /test/receive.py nontls|grep "helm test"
           {{- end }} 

           #clean up
           run_curl_success "DELETE" "exchanges/%2F/ex111"
           run_curl_success "DELETE" "queues/%2F/que111"
      env:
         - name: RABBITMQ_PASSWORD
           valueFrom:
             secretKeyRef:
               name: {{ template "rabbitmq.fullname" . }}
               key: rabbitmq-password
         - name: RABBITMQ_USER
           valueFrom:
             secretKeyRef:
               name: {{ template "rabbitmq.fullname" . }}
               key: rabbitmq-user

  volumes:
    - name: testconfigmap
      configMap:
        name: "{{ template "rabbitmq.fullname" . }}-test-configmap"
    - name: clientcert
      secret:
        {{- if .Values.rbac.test.helmTestSecret }}
        secretName: {{ .Values.rbac.test.helmTestSecret }}
        {{- else }}
        secretName: "{{ template "rabbitmq.fullname" . }}-test-secret"
        {{- end }}
  restartPolicy: Never
  {{- if .Values.rbac.enabled}}
  serviceAccountName: {{ template "rabbitmq.fullname" . }}-test-account
  {{- else if not ( empty .Values.rbac.test.serviceAccountNameHelmTest ) }}
  serviceAccountName: "{{ .Values.rbac.test.serviceAccountNameHelmTest }}"
  {{- else }}
  serviceAccountName: "{{ .Values.rbac.serviceAccountName }}"
  {{- end }}

{{- end }}
{{- end }}

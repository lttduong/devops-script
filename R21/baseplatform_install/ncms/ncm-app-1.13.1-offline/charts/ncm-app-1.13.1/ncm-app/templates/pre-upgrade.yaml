{{- if eq (include "ncm-app.certAPIexist" .) "true" }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-cert-sa
  namespace: "{{.Release.Namespace}}"
  labels:
    {{- include "ncm-app.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-upgrade, pre-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: "{{.Release.Namespace}}"
  name: {{ .Release.Name }}-cert-role
  labels:
    {{- include "ncm-app.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-upgrade, pre-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "create", "delete", "list"]
- apiGroups: ["cert-manager.io"]
  resources: ["certificates"]
  verbs: ["get", "create", "delete", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-cert-rb
  namespace: "{{.Release.Namespace}}"
  labels:
    {{- include "ncm-app.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-upgrade, pre-install
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation
subjects:
- kind: ServiceAccount
  name: {{ .Release.Name }}-cert-sa
  namespace: "{{.Release.Namespace}}"
  apiGroup: ""
roleRef:
  kind: Role
  name: {{ .Release.Name }}-cert-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-cert-pre-upgrade
  labels:
    {{- include "ncm-app.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-upgrade, pre-install
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded
spec:
  backoffLimit: 1
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        {{- include "ncm-app.labels" . | nindent 8 }}
    spec:
      {{- include "placement.spec" . | nindent 6}}
      serviceAccount: {{ .Release.Name }}-cert-sa
      securityContext:
        runAsUser: 1000
        runAsGroup:  1000
        fsGroup: 1000
      restartPolicy: Never
      containers:
      - image: "{{ .Values.global.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}" 
        name: {{ .Release.Name }}
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "250m"
        command:
        - sh
        - -c
        - |
            echo "Delete certificate and secret created by Cert-Manager"
            {{- include "ncm-app.certDelete" . | nindent 12 }}
            kubectl delete secret {{ template "ncm-app.fullname" . }}-tls --namespace {{.Release.Namespace}} --ignore-not-found --wait=true
{{- end }}
